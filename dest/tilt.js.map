{"version":3,"sources":["tilt.js"],"names":["$","fn","tilt","options","each","requestTick","ticking","requestAnimationFrame","updateTransforms","settings","extend","maxTilt","is","data","perspective","easing","scale","speed","transition","axis","bindEvents","on","mouseMove","mouseEnter","mouseLeave","setTransition","timeout","undefined","clearTimeout","css","setTimeout","trigger","mousePosition","x","event","pageX","y","pageY","reset","getValues","width","clientWidth","height","clientHeight","percentageX","offset","left","percentageY","top","tiltX","toFixed","tiltY","transforms","init","jQuery"],"mappings":"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","file":"tilt.js","sourcesContent":["(function ($) {\r\n    $.fn.tilt = function (options) {\r\n\r\n        /**\r\n         * Loop every instance\r\n         */\r\n        return this.each(function () {\r\n\r\n            /**\r\n             * RequestAnimationFrame\r\n             */\r\n            this.requestTick = () => {\r\n                if (this.ticking) return;\r\n                requestAnimationFrame(this.updateTransforms);\r\n                this.ticking = true;\r\n            };\r\n\r\n            /**\r\n             * Default settings merged with user settings\r\n             * Can be set trough data attributes or as parameter.\r\n             * @type {*}\r\n             */\r\n            this.settings = $.extend({\r\n                maxTilt: $(this).is('[data-tilt-max]') ? $(this).data('tilt-max') : 20,\r\n                perspective: $(this).is('[data-tilt-perspective]') ? $(this).data('tilt-perspective') : 1000,\r\n                easing: $(this).is('[data-tilt-easing]') ? $(this).data('tilt-easing') : 'cubic-bezier(.03,.98,.52,.99)',\r\n                scale: $(this).is('[data-tilt-scale]') ? $(this).data('tilt-scale') : '1',\r\n                speed: $(this).is('[data-tilt-speed]') ? $(this).data('tilt-speed') : '300',\r\n                transition: $(this).is('[data-tilt-transition]') ? $(this).data('tilt-transition') : true,\r\n                axis: $(this).is('[data-tilt-axis]') ? $(this).data('tilt-axis') : null\r\n            }, options);\r\n\r\n            /**\r\n             * Bind mouse movement evens on instance\r\n             */\r\n            this.bindEvents = () => {\r\n                $(this).on('mousemove', this.mouseMove);\r\n                $(this).on('mouseenter', this.mouseEnter);\r\n                $(this).on('mouseleave', this.mouseLeave);\r\n            };\r\n            this.setTransition = () =>{\r\n                if (this.timeout !== undefined) clearTimeout(this.timeout);\r\n                $(this).css({'transition': `${this.settings.speed}ms ${this.settings.easing}`});\r\n                this.timeout = setTimeout(() => {$(this).css({'transition': ''})}, this.settings.speed);\r\n            };\r\n            this.mouseEnter = () => {\r\n                this.ticking = false;\r\n                $(this).css({'will-change': 'transform'});\r\n                this.setTransition();\r\n\r\n                // Trigger change event\r\n                $(this).trigger(\"tilt.mouseEnter\");\r\n            };\r\n            this.mouseMove = () => {\r\n                this.mousePosition = {x: event.pageX, y: event.pageY};\r\n                this.requestTick();\r\n            };\r\n            this.mouseLeave = () => {\r\n                this.setTransition();\r\n                this.reset = true;\r\n                this.requestTick();\r\n\r\n                // Trigger change event\r\n                $(this).trigger(\"tilt.mouseLeave\");\r\n            };\r\n\r\n            /**\r\n             * Get tilt values\r\n             *\r\n             * @returns {{x: tilt value, y: tilt value}}\r\n             */\r\n            this.getValues = () => {\r\n                const width = this.clientWidth;\r\n                const height = this.clientHeight;\r\n                const percentageX = (this.mousePosition.x - $(this).offset().left) / width;\r\n                const percentageY = (this.mousePosition.y - $(this).offset().top) / height;\r\n                // x or y position inside instance / width of instance = percentage of position inside instance * the max tilt value\r\n                const tiltX = ((this.settings.maxTilt / 2) - ((percentageX) * this.settings.maxTilt)).toFixed(2);\r\n                const tiltY = (((percentageY) * this.settings.maxTilt) - (this.settings.maxTilt / 2)).toFixed(2);\r\n                // Return x & y tilt values\r\n                return {tiltX, tiltY, 'percentageX' : percentageX * 100, 'percentageY':  percentageY * 100}\r\n            };\r\n\r\n            /**\r\n             * Update tilt transforms on mousemove\r\n             */\r\n            this.updateTransforms = () => {\r\n                const transforms = this.getValues();\r\n\r\n                if (this.reset) {\r\n                    this.reset = false;\r\n                    $(this).css('transform', `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg)`);\r\n                    return;\r\n                } else {\r\n                    $(this).css('transform', `perspective(${this.settings.perspective}px) rotateX(${this.settings.axis === 'x' ? 0 : transforms.tiltY}deg) rotateY(${this.settings.axis === 'y' ? 0 : transforms.tiltX}deg) scale3d(${this.settings.scale},${this.settings.scale},${this.settings.scale})`);\r\n                }\r\n\r\n                // Trigger change event\r\n                $(this).trigger(\"change\", [transforms]);\r\n\r\n                this.ticking = false;\r\n            };\r\n\r\n            this.init = () => {\r\n                this.bindEvents();\r\n            };\r\n\r\n            // Init\r\n            this.init();\r\n\r\n        });\r\n    };\r\n}(jQuery));"]}